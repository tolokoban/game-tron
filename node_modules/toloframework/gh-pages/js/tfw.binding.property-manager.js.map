{"version":3,"sources":["tfw.binding.property-manager.js"],"names":["require","module","exports","_","D","X","intl","arguments","all","constructor","isLinkable","getAllAttributesNames","getProperties","Event","ID","CONTAINER_SYMBOL","PROPERTY_SYMBOL","PropertyManager","container","Object","defineProperty","value","writable","configurable","enumerable","name","id","_props","_container","prototype","set","propertyName","create","get","propertyId","fire","wave","prop","event","change","converter","currentValue","alwaysFired","areDifferent","that","exec","Error","delay","parseFloat","isNaN","on","action","add","off","remove","fail","pm","ex","console","error","undefined","keys","property","properties","Array","isArray","options","p","createNewProperty","call","applyAttributesToTarget","source","target","attName","attValue","filter","functionOrUndefined","castPositiveInteger","manager","timeout","createGetter","createSetter","init","bind","v","newValue","addPropToValue","setter","cast","removePropFromValue","castedValue","isContentChangeAware","indexOf","push","pos","splice","createAction","clearTimeout","setTimeout","msg","Math","max","floor","f","oldValue"],"mappings":";;;;AAAA;AAA2CA,OAAO,CAAE,8BAAF,EAAkC,UAASA,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAAE,MAAIC,CAAC,GAAC,YAAU;AAAC,QAAIC,CAAC,GAAC;AAAC,YAAK,EAAN;AAAS,YAAK;AAAd,KAAN;AAAA,QAAwBC,CAAC,GAACL,OAAO,CAAC,GAAD,CAAP,CAAaM,IAAvC;;AAA4C,aAASH,CAAT,GAAY;AAAC,aAAOE,CAAC,CAACD,CAAD,EAAGG,SAAH,CAAR;AAAuB;;AAAAJ,IAAAA,CAAC,CAACK,GAAF,GAAMJ,CAAN;AAAQ,WAAOD,CAAP;AAAS,GAA5G,EAAN;;AACtH;AAEH;;;;;;;AAKAF,EAAAA,MAAM,CAACC,OAAP,GAAiBO,WAAjB;AAEA;;;;;;AAKAR,EAAAA,MAAM,CAACC,OAAP,CAAeQ,UAAf,GAA4BA,UAA5B;AAEAT,EAAAA,MAAM,CAACC,OAAP,CAAeS,qBAAf,GAAuCA,qBAAvC;AAEA;;;;AAGAV,EAAAA,MAAM,CAACC,OAAP,CAAeU,aAAf,GAA+BA,aAA/B;;AAGA,MAAMC,KAAK,GAAGb,OAAO,CAAC,WAAD,CAArB;;AAEA,MAAIc,EAAE,GAAG,CAAT,CA3BuH,CA6BvH;AACA;;AACA,MAAMC,gBAAgB,GAAG,0BAAzB,CA/BuH,CAgCvH;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,kCAAxB;AAEA;;;;AAGA,WAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAChCC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC;AAC9BC,MAAAA,KAAK,EAAEP,EAAE,EADqB;AAE9BQ,MAAAA,QAAQ,EAAE,KAFoB;AAG9BC,MAAAA,YAAY,EAAE,KAHgB;AAI9BC,MAAAA,UAAU,EAAE;AAJkB,KAAlC;AAMA,SAAKC,IAAL,GAAY,KAAKC,EAAjB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAkBV,SAAlB;AACH;AAED;;;;;;;;;AAOAD,EAAAA,eAAe,CAACY,SAAhB,CAA0BC,GAA1B,GAAgC,UAASC,YAAT,EAAuBV,KAAvB,EAA8B;AAC1D,SAAKW,MAAL,CAAYD,YAAZ,EAA0BD,GAA1B,CAA8BT,KAA9B;AACH,GAFD;AAIA;;;;;AAGAJ,EAAAA,eAAe,CAACY,SAAhB,CAA0BnB,UAA1B,GAAuC,UAASqB,YAAT,EAAuB;AAC1D,QAAIb,SAAS,GAAG,KAAKU,UAArB;AACA,QAAI,CAACV,SAAL,EAAgB,OAAO,KAAP;AAChB,QAAI,OAAOA,SAAS,CAACH,gBAAD,CAAhB,KAAuC,WAA3C,EAAwD,OAAO,KAAP;AACxD,WAAO,OAAOG,SAAS,CAACH,gBAAD,CAAT,CAA4BY,MAA5B,CAAmCI,YAAnC,CAAP,KAA4D,WAAnE;AAEH,GAND;AAQA;;;;;;;;;AAOAd,EAAAA,eAAe,CAACY,SAAhB,CAA0BI,GAA1B,GAAgC,UAASF,YAAT,EAAuB;AACnD,WAAO,KAAKC,MAAL,CAAYD,YAAZ,EAA0BE,GAA1B,EAAP;AACH,GAFD;;AAIAhB,EAAAA,eAAe,CAACY,SAAhB,CAA0BK,UAA1B,GAAuC,UAASH,YAAT,EAAuB;AAC1D,WAAO,KAAKC,MAAL,CAAYD,YAAZ,EAA0BL,EAAjC;AACH,GAFD;;AAIAT,EAAAA,eAAe,CAACY,SAAhB,CAA0BM,IAA1B,GAAiC,UAASJ,YAAT,EAAuBK,IAAvB,EAA6B;AAC1D,QAAIC,IAAI,GAAG,KAAKL,MAAL,CAAYD,YAAZ,CAAX;AACAM,IAAAA,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAgBE,IAAI,CAACJ,GAAL,EAAhB,EAA4BF,YAA5B,EAA0C,KAAKH,UAA/C,EAA2DQ,IAA3D;AACH,GAHD;;AAKAnB,EAAAA,eAAe,CAACY,SAAhB,CAA0BU,MAA1B,GAAmC,UAASR,YAAT,EAAuBV,KAAvB,EAA8Be,IAA9B,EAAoC;AACnE,QAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiCA,IAAI,GAAG,EAAP;AAEjC,QAAIC,IAAI,GAAG,KAAKL,MAAL,CAAYD,YAAZ,CAAX;AAEA,QAAIS,SAAS,GAAGH,IAAI,CAACG,SAArB;;AACA,QAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACjCnB,MAAAA,KAAK,GAAGmB,SAAS,CAACnB,KAAD,CAAjB;AACH;;AAED,QAAIoB,YAAY,GAAGJ,IAAI,CAACJ,GAAL,EAAnB;;AACA,QAAII,IAAI,CAACK,WAAL,IAAoBC,YAAY,CAACtB,KAAD,EAAQoB,YAAR,CAApC,EAA2D;AACvDJ,MAAAA,IAAI,CAACP,GAAL,CAAST,KAAT;AACA,UAAIuB,IAAI,GAAG,IAAX;AACAC,MAAAA,IAAI,CAACR,IAAD,EAAO,YAAW;AAClB;AACAO,QAAAA,IAAI,CAACT,IAAL,CAAUJ,YAAV,EAAwBK,IAAxB;AACH,OAHG,CAAJ;AAIH;AACJ,GAnBD;AAqBA;;;;;;;;;;AAQAnB,EAAAA,eAAe,CAACY,SAAhB,CAA0BW,SAA1B,GAAsC,UAAST,YAAT,EAAuBS,SAAvB,EAAkC;AACpE,QAAIH,IAAI,GAAG,KAAKL,MAAL,CAAYD,YAAZ,CAAX;;AACA,QAAI,OAAOS,SAAP,KAAqB,UAAzB,EAAqC;AACjCH,MAAAA,IAAI,CAACG,SAAL,GAAiBA,SAAjB;AACH,KAFD,MAEO,IAAI,OAAOA,SAAP,KAAqB,WAAzB,EAAsC;AACzC,YAAMM,KAAK,CACP,+CACA,oDAFO,CAAX;AAIH;;AACD,WAAOT,IAAI,CAACG,SAAZ;AACH,GAXD;;AAaAvB,EAAAA,eAAe,CAACY,SAAhB,CAA0BkB,KAA1B,GAAkC,UAAShB,YAAT,EAAuBgB,KAAvB,EAA8B;AAC5D,QAAIV,IAAI,GAAG,KAAKL,MAAL,CAAYD,YAAZ,CAAX;AACAgB,IAAAA,KAAK,GAAGC,UAAU,CAACD,KAAD,CAAlB;AACA,QAAIE,KAAK,CAACF,KAAD,CAAT,EAAkB,OAAOV,IAAI,CAACU,KAAZ;AAClBV,IAAAA,IAAI,CAACU,KAAL,GAAaA,KAAb;AACH,GALD;AAOA;;;;;;;;;AAOA9B,EAAAA,eAAe,CAACY,SAAhB,CAA0BqB,EAA1B,GAA+B,UAASnB,YAAT,EAAuBoB,MAAvB,EAA+B;AAC1D,QAAId,IAAI,GAAG,KAAKL,MAAL,CAAYD,YAAZ,CAAX;AACAM,IAAAA,IAAI,CAACC,KAAL,CAAWc,GAAX,CAAeD,MAAf;AACH,GAHD;AAKA;;;;;;;;;AAOAlC,EAAAA,eAAe,CAACY,SAAhB,CAA0BwB,GAA1B,GAAgC,UAAStB,YAAT,EAAuBoB,MAAvB,EAA+B;AAC3D,QAAId,IAAI,GAAG,KAAKL,MAAL,CAAYD,YAAZ,CAAX;AACAM,IAAAA,IAAI,CAACC,KAAL,CAAWgB,MAAX,CAAkBH,MAAlB;AACH,GAHD;AAMA;;;;;;;AAKA,WAAS1C,WAAT,CAAqBS,SAArB,EAAgC;AAC5B,QAAI;AACA,UAAI,OAAOA,SAAP,KAAqB,WAAzB,EAAsC;AAClCqC,QAAAA,IAAI,CAAC,oCAAD,CAAJ;AACH;;AACD,UAAI,QAAOrC,SAAP,MAAqB,QAAzB,EAAmC,OAAO,IAAP;AAEnC,UAAIsC,EAAE,GAAGtC,SAAS,CAACH,gBAAD,CAAlB;;AACA,UAAI,CAACyC,EAAL,EAAS;AACLA,QAAAA,EAAE,GAAG,IAAIvC,eAAJ,CAAoBC,SAApB,CAAL;AACAA,QAAAA,SAAS,CAACH,gBAAD,CAAT,GAA8ByC,EAA9B;AACH;;AACD,aAAOA,EAAP;AACH,KAZD,CAYE,OAAOC,EAAP,EAAW;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcF,EAAd;AACA,aAAO,IAAP;AACH;AACJ;AAED;;;;;;;AAKA,WAAS/C,UAAT,CAAoBQ,SAApB,EAA+Ba,YAA/B,EAA6C;AACzC,QAAI,OAAOb,SAAS,CAACH,gBAAD,CAAhB,KAAuC,WAA3C,EAAwD,OAAO,KAAP;AACxD,QAAI,OAAOgB,YAAP,KAAwB,QAA5B,EAAsC,OAAO,IAAP;AACtC,WAAO,OAAOb,SAAS,CAACH,gBAAD,CAAT,CAA4BY,MAA5B,CAAmCI,YAAnC,CAAP,KAA4D,WAAnE;AACH;;AAAA;;AAED,WAASpB,qBAAT,CAA+BO,SAA/B,EAA0C;AACtC,QAAIA,SAAS,CAACH,gBAAD,CAAT,KAAgC6C,SAApC,EAA+C,OAAO,EAAP;AAC/C,WAAOzC,MAAM,CAAC0C,IAAP,CAAY3C,SAAS,CAACH,gBAAD,CAAT,CAA4BY,MAAxC,CAAP;AACH;;AAAA;AAED;;;;AAGA,WAASf,aAAT,CAAuBkD,QAAvB,EAAiC;AAC7B,QAAIC,UAAU,GAAGD,QAAQ,CAAC9C,eAAD,CAAzB;AACA,QAAI,CAACgD,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC,OAAO,IAAP;AAChC,WAAOA,UAAP;AACH;;AAAA;AAED;;;;;;;;;;;AAUA9C,EAAAA,eAAe,CAACY,SAAhB,CAA0BG,MAA1B,GAAmC,UAASD,YAAT,EAAuBmC,OAAvB,EAAgC;AAC/D,QAAItB,IAAI,GAAG,IAAX;AACA,QAAI,OAAOb,YAAP,KAAwB,QAA5B,EAAsCwB,IAAI,CAAC,gCAAD,CAAJ;AACtC,QAAIY,CAAC,GAAG,KAAKxC,MAAL,CAAYI,YAAZ,CAAR;;AACA,QAAI,CAACoC,CAAL,EAAQ;AACJ,UAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,GAAG,EAAV;AACpCC,MAAAA,CAAC,GAAGC,iBAAiB,CAACC,IAAlB,CAAuB,IAAvB,EAA6BtC,YAA7B,EAA2CmC,OAA3C,CAAJ;AACH;;AACD,WAAOC,CAAP;AACH,GATD;AAWA;;;;;AAGA,WAASG,uBAAT,CAAiCC,MAAjC,EAAyCC,MAAzC,EAAiD;AAC7C,QAAIC,OAAJ,EAAaC,QAAb;;AACA,SAAKD,OAAL,IAAgBF,MAAhB,EAAwB;AACpB,UAAItE,MAAM,CAACC,OAAP,CAAeQ,UAAf,CAA0B8D,MAA1B,EAAkCC,OAAlC,CAAJ,EAAgD;AAC5CC,QAAAA,QAAQ,GAAGH,MAAM,CAACE,OAAD,CAAjB;AACAD,QAAAA,MAAM,CAACC,OAAD,CAAN,GAAkBC,QAAlB;AACH;AACJ;AACJ;;AAED,WAASN,iBAAT,CAA2BrC,YAA3B,EAAyCmC,OAAzC,EAAkD;AAC9C,QAAItB,IAAI,GAAG,IAAX;AAEA,QAAIP,IAAI,GAAG;AACPhB,MAAAA,KAAK,EAAEuC,SADA;AAEPtB,MAAAA,KAAK,EAAE,IAAIzB,KAAJ,EAFA;AAGP8D,MAAAA,MAAM,EAAEC,mBAAmB,CAACV,OAAO,CAACS,MAAT,CAHpB;AAIPnC,MAAAA,SAAS,EAAEoC,mBAAmB,CAACV,OAAO,CAAC1B,SAAT,CAJvB;AAKPO,MAAAA,KAAK,EAAE8B,mBAAmB,CAACX,OAAO,CAACnB,KAAT,CALnB;AAMPI,MAAAA,MAAM,EAAE,IAND;AAOPT,MAAAA,WAAW,EAAEwB,OAAO,CAACxB,WAAR,GAAsB,IAAtB,GAA6B,KAPnC;AAQPoC,MAAAA,OAAO,EAAE,IARF;AASPrD,MAAAA,IAAI,EAAEM,YATC;AAUPgD,MAAAA,OAAO,EAAE;AAVF,KAAX;AAYA1C,IAAAA,IAAI,CAACJ,GAAL,GAAW+C,YAAY,CAAC3C,IAAD,EAAO6B,OAAP,CAAvB;AACA7B,IAAAA,IAAI,CAACP,GAAL,GAAWmD,YAAY,CAAC5C,IAAD,EAAO6B,OAAP,EAAgBtB,IAAhB,EAAsBb,YAAtB,CAAvB;AAEA,SAAKJ,MAAL,CAAYI,YAAZ,IAA4BM,IAA5B;;AACA,QAAI,OAAO6B,OAAO,CAACgB,IAAf,KAAwB,WAA5B,EAAyC;AACrC7C,MAAAA,IAAI,CAACP,GAAL,CAASoC,OAAO,CAACgB,IAAjB;AACH;;AAED/D,IAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKQ,UAA3B,EAAuCG,YAAvC,EAAqD;AACjDE,MAAAA,GAAG,EAAEI,IAAI,CAACJ,GAAL,CAASkD,IAAT,CAAc9C,IAAd,CAD4C;AAEjDP,MAAAA,GAAG,EAAEc,IAAI,CAACL,MAAL,CAAY4C,IAAZ,CAAiBvC,IAAjB,EAAuBb,YAAvB,CAF4C;AAGjDP,MAAAA,UAAU,EAAE,IAHqC;AAIjDD,MAAAA,YAAY,EAAE;AAJmC,KAArD;AAOA,WAAOc,IAAP;AACH;;AAED,WAAS2C,YAAT,CAAsB3C,IAAtB,EAA4B6B,OAA5B,EAAqC;AACjC,QAAI,OAAOA,OAAO,CAACjC,GAAf,KAAuB,UAA3B,EAAuC;AACnC,aAAO,UAASmD,CAAT,EAAY;AACf,YAAIC,QAAQ,GAAGnB,OAAO,CAACjC,GAAR,CAAYmD,CAAZ,CAAf;AACAE,QAAAA,cAAc,CAACjD,IAAD,EAAOgD,QAAP,CAAd;AACA,eAAOA,QAAP;AACH,OAJD;AAKH;;AACD,WAAO,UAASD,CAAT,EAAY;AACf,aAAO/C,IAAI,CAAChB,KAAZ;AACH,KAFD;AAGH;;AAED,WAAS4D,YAAT,CAAsB5C,IAAtB,EAA4B6B,OAA5B,EAAqCtB,IAArC,EAA2Cb,YAA3C,EAAyD;AACrD,QAAIwD,MAAJ;;AACA,QAAI,OAAOrB,OAAO,CAACsB,IAAf,KAAwB,UAA5B,EAAwC;AACpC,UAAI,OAAOtB,OAAO,CAACpC,GAAf,KAAuB,UAA3B,EAAuC;AACnCyD,QAAAA,MAAM,GAAG,gBAASH,CAAT,EAAY;AACjBK,UAAAA,mBAAmB,CAACpD,IAAD,EAAOA,IAAI,CAACJ,GAAL,EAAP,CAAnB;AACA,cAAIyD,WAAW,GAAGxB,OAAO,CAACsB,IAAR,CAAaJ,CAAb,EAAgBxC,IAAhB,CAAlB;AACA0C,UAAAA,cAAc,CAACjD,IAAD,EAAOA,IAAI,CAAChB,KAAZ,CAAd;AACA6C,UAAAA,OAAO,CAACpC,GAAR,CAAY4D,WAAZ;AACH,SALD;AAMH,OAPD,MAOO;AACHH,QAAAA,MAAM,GAAG,gBAASH,CAAT,EAAY;AACjBK,UAAAA,mBAAmB,CAACpD,IAAD,EAAOA,IAAI,CAACJ,GAAL,EAAP,CAAnB;AACAI,UAAAA,IAAI,CAAChB,KAAL,GAAa6C,OAAO,CAACsB,IAAR,CAAaJ,CAAb,EAAgBxC,IAAhB,CAAb;AACA0C,UAAAA,cAAc,CAACjD,IAAD,EAAOA,IAAI,CAAChB,KAAZ,CAAd;AACH,SAJD;AAKH;AACJ,KAfD,MAeO;AACHkE,MAAAA,MAAM,GAAG,OAAOrB,OAAO,CAACpC,GAAf,KAAuB,UAAvB,GAAoCoC,OAAO,CAACpC,GAA5C,GAAkD,UAASsD,CAAT,EAAY;AACnEK,QAAAA,mBAAmB,CAACpD,IAAD,EAAOA,IAAI,CAACJ,GAAL,EAAP,CAAnB;AACAI,QAAAA,IAAI,CAAChB,KAAL,GAAa+D,CAAb;AACAE,QAAAA,cAAc,CAACjD,IAAD,EAAOA,IAAI,CAAChB,KAAZ,CAAd;AACH,OAJD;AAKH;;AACD,WAAOkE,MAAP;AACH;AAED;;;;;;AAIA,WAASD,cAAT,CAAwBjD,IAAxB,EAA8BhB,KAA9B,EAAqC;AACjC,QAAIA,KAAK,KAAKuC,SAAV,IAAuBvC,KAAK,KAAK,IAArC,EAA2C;AAC3C,QAAIA,KAAK,CAACsE,oBAAN,KAA+B,IAAnC,EAAyC;AACzC,QAAI5B,UAAU,GAAG1C,KAAK,CAACL,eAAD,CAAtB;;AACA,QAAI,CAACgD,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC;AAC5BA,MAAAA,UAAU,GAAG,CAAC1B,IAAD,CAAb;AACH,KAFD,MAEO,IAAI0B,UAAU,CAAC6B,OAAX,CAAmBvD,IAAnB,MAA6B,CAAC,CAAlC,EAAqC;AACxC0B,MAAAA,UAAU,CAAC8B,IAAX,CAAgBxD,IAAhB;AACH;;AACDhB,IAAAA,KAAK,CAACL,eAAD,CAAL,GAAyB+C,UAAzB;AACH;;AAED,WAAS0B,mBAAT,CAA6BpD,IAA7B,EAAmChB,KAAnC,EAA0C;AACtC,QAAIA,KAAK,KAAKuC,SAAV,IAAuBvC,KAAK,KAAK,IAArC,EAA2C;AAC3C,QAAIA,KAAK,CAACsE,oBAAN,KAA+B,IAAnC,EAAyC;AACzC,QAAI5B,UAAU,GAAG1C,KAAK,CAACL,eAAD,CAAtB;AACA,QAAI,CAACgD,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC;AAChC,QAAI+B,GAAG,GAAG/B,UAAU,CAAC6B,OAAX,CAAmBvD,IAAnB,CAAV;AACA,QAAIyD,GAAG,KAAK,CAAC,CAAb,EAAgB;AAChB/B,IAAAA,UAAU,CAACgC,MAAX,CAAkBD,GAAlB,EAAuB,CAAvB;AACH;AAED;;;;;;;;AAMA7E,EAAAA,eAAe,CAACY,SAAhB,CAA0BmE,YAA1B,GAAyC,UAASjE,YAAT,EAAuBmC,OAAvB,EAAgC;AACrE,QAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,GAAG,EAAV;AACpCA,IAAAA,OAAO,CAACxB,WAAR,GAAsB,IAAtB;AACA,WAAO,KAAKV,MAAL,CAAYD,YAAZ,EAA0BmC,OAA1B,CAAP;AACH,GAJD;AAOA;;;;;;;;;AAOA,WAASrB,IAAT,CAAcR,IAAd,EAAoBc,MAApB,EAA4B;AACxB,QAAI,CAACd,IAAI,CAACU,KAAV,EAAiBI,MAAM,GAAvB,KACK;AACD8C,MAAAA,YAAY,CAAC5D,IAAI,CAAC0C,OAAN,CAAZ;AACA1C,MAAAA,IAAI,CAAC0C,OAAL,GAAemB,UAAU,CAAC/C,MAAD,EAASd,IAAI,CAACU,KAAd,CAAzB;AACH;AACJ;;AAAA;;AAGD,WAASQ,IAAT,CAAc4C,GAAd,EAAmB5B,MAAnB,EAA2B;AACvB,QAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,MAAAA,MAAM,GAAG,EAAT;AACH,KAFD,MAEO;AACHA,MAAAA,MAAM,GAAG,OAAOA,MAAhB;AACH;;AACD,UAAMzB,KAAK,CAAC,kCAAkCyB,MAAlC,GAA2C,IAA3C,GAAkD4B,GAAnD,CAAX;AACH;;AAED,WAAStB,mBAAT,CAA6BO,CAA7B,EAAgC;AAC5B,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,CAAP;AAC3B,QAAInC,KAAK,CAACmC,CAAD,CAAT,EAAc,OAAO,CAAP;AACd,WAAOgB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,KAAL,CAAWlB,CAAX,CAAZ,CAAP;AACH;;AAED,WAASR,mBAAT,CAA6B2B,CAA7B,EAAgC;AAC5B,QAAI,OAAOA,CAAP,KAAa,UAAjB,EAA6B,OAAOA,CAAP;AAC7B,WAAO3C,SAAP;AACH;AAED;;;;;;;;AAMA,WAASjB,YAAT,CAAsB6D,QAAtB,EAAgCnB,QAAhC,EAA0C;AACtC,WAAOmB,QAAQ,KAAKnB,QAApB;AACH;;AAGDpF,EAAAA,MAAM,CAACC,OAAP,CAAeC,CAAf,GAAmBA,CAAnB;AACC,CA3ZiD,CAAP","sourcesContent":["/** @module tfw.binding.property-manager */require( 'tfw.binding.property-manager', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n   \"use strict\";\n\n/**\n * @export\n * @function\n * @param {object} container - Object which will hold properties.\n */\nmodule.exports = constructor;\n\n/**\n * @export .isLinkable\n * Look if an object  has a property manager assigned to  it and own a\n * property which name is `propertyName`.\n */\nmodule.exports.isLinkable = isLinkable;\n\nmodule.exports.getAllAttributesNames = getAllAttributesNames;\n\n/**\n * Return the linkable properties which holds this value, or `null`.\n */\nmodule.exports.getProperties = getProperties;\n\n\nconst Event = require(\"tfw.event\");\n\nlet ID = 0;\n\n// A container  with linkable  properties has  an attribute  with this\n// name. This attribute own the list of linkable properties.\nconst CONTAINER_SYMBOL = \"__tfw.property-manager__\";\n// A linkable property owned by a container has an attribute with this\n// name. This attribute give the name  of the property and a reference\n// to the container.\nconst PROPERTY_SYMBOL = '__tfw.binding.property-manager__';\n\n/**\n *\n */\nfunction PropertyManager(container) {\n    Object.defineProperty(this, 'id', {\n        value: ID++,\n        writable: false,\n        configurable: false,\n        enumerable: true\n    });\n    this.name = this.id;\n    this._props = {};\n    this._container = container;\n}\n\n/**\n * @class PropertyManager\n * @member set\n * Set the inner value of a property without fireing any event.\n * @param {string} propertyName.\n * @param {any} value.\n */\nPropertyManager.prototype.set = function(propertyName, value) {\n    this.create(propertyName).set(value);\n};\n\n/**\n * Look if `propertyName` is a linkable property of this object.\n */\nPropertyManager.prototype.isLinkable = function(propertyName) {\n    var container = this._container;\n    if (!container) return false;\n    if (typeof container[CONTAINER_SYMBOL] === 'undefined') return false;\n    return typeof container[CONTAINER_SYMBOL]._props[propertyName] !== 'undefined';\n\n};\n\n/**\n * @class PropertyManager\n * @member get\n * @param {string} propertyName.\n * @return {any} Inner value of the property.\n *\n */\nPropertyManager.prototype.get = function(propertyName) {\n    return this.create(propertyName).get();\n};\n\nPropertyManager.prototype.propertyId = function(propertyName) {\n    return this.create(propertyName).id;\n};\n\nPropertyManager.prototype.fire = function(propertyName, wave) {\n    var prop = this.create(propertyName);\n    prop.event.fire(prop.get(), propertyName, this._container, wave);\n};\n\nPropertyManager.prototype.change = function(propertyName, value, wave) {\n    if (typeof wave === 'undefined') wave = [];\n\n    var prop = this.create(propertyName);\n\n    var converter = prop.converter;\n    if (typeof converter === 'function') {\n        value = converter(value);\n    }\n\n    var currentValue = prop.get();\n    if (prop.alwaysFired || areDifferent(value, currentValue)) {\n        prop.set(value);\n        var that = this;\n        exec(prop, function() {\n            // Fire change event.\n            that.fire(propertyName, wave);\n        });\n    }\n};\n\n/**\n * @class PropertyManager\n * @member converter\n * @param {string} propertyName.\n * @param {function=undefined} converter -  Converter is assigned only\n * if it is a function.\n * @return {function} Current converter.\n */\nPropertyManager.prototype.converter = function(propertyName, converter) {\n    var prop = this.create(propertyName);\n    if (typeof converter === 'function') {\n        prop.converter = converter;\n    } else if (typeof converter !== 'undefined') {\n        throw Error(\n            \"[tfw.binding.property-manager::converter] \" +\n            \"`converter` must be of type function or undefined!\"\n        );\n    }\n    return prop.converter;\n};\n\nPropertyManager.prototype.delay = function(propertyName, delay) {\n    var prop = this.create(propertyName);\n    delay = parseFloat(delay);\n    if (isNaN(delay)) return prop.delay;\n    prop.delay = delay;\n};\n\n/**\n * @class PropertyManager\n * @member on\n * @param {string} propertyName.\n * @param {function(val,name,container)} action  - Function to execute\n * when a property changed.\n */\nPropertyManager.prototype.on = function(propertyName, action) {\n    var prop = this.create(propertyName);\n    prop.event.add(action);\n};\n\n/**\n * @class PropertyManager\n * @member off\n * @param {string} propertyName.\n * @param {function(val,name,container)} action  - Function to execute\n * when a property changed.\n */\nPropertyManager.prototype.off = function(propertyName, action) {\n    var prop = this.create(propertyName);\n    prop.event.remove(action);\n};\n\n\n/**\n * @export\n * @function\n * @param {object} container - Object which will hold properties.\n */\nfunction constructor(container) {\n    try {\n        if (typeof container === 'undefined') {\n            fail(\"Argument `container` is mandatory!\");\n        }\n        if (typeof container !== 'object') return null;\n\n        let pm = container[CONTAINER_SYMBOL];\n        if (!pm) {\n            pm = new PropertyManager(container);\n            container[CONTAINER_SYMBOL] = pm;\n        }\n        return pm;\n    } catch (ex) {\n        console.error(ex);\n        return null;\n    }\n}\n\n/**\n * @export .isLinkable\n * Look if an object  has a property manager assigned to  it and own a\n * property which name is `propertyName`.\n */\nfunction isLinkable(container, propertyName) {\n    if (typeof container[CONTAINER_SYMBOL] === \"undefined\") return false;\n    if (typeof propertyName !== 'string') return true;\n    return typeof container[CONTAINER_SYMBOL]._props[propertyName] !== \"undefined\";\n};\n\nfunction getAllAttributesNames(container) {\n    if (container[CONTAINER_SYMBOL] === undefined) return [];\n    return Object.keys(container[CONTAINER_SYMBOL]._props);\n};\n\n/**\n * Return the linkable properties which holds this value, or `null`.\n */\nfunction getProperties(property) {\n    var properties = property[PROPERTY_SYMBOL];\n    if (!Array.isArray(properties)) return null;\n    return properties;\n};\n\n/**\n * @export .create\n * Create an new linkable property.\n * @param {string} propertyName - Name of the property.\n * @param {any} options.init - Initial value. Won't fire any change notification.\n * @param {function=undefined} options.get - Special getter.\n * @param {function=undefined} options.set - Special setter.\n * @param {function=undefined}  options.cast - Conversion to  apply to\n * the value before setting it.\n */\nPropertyManager.prototype.create = function(propertyName, options) {\n    var that = this;\n    if (typeof propertyName !== 'string') fail(\"propertyName must be a string!\");\n    var p = this._props[propertyName];\n    if (!p) {\n        if (typeof options === 'undefined') options = {};\n        p = createNewProperty.call(this, propertyName, options);\n    }\n    return p;\n};\n\n/**\n * Copy all the attributes of `source` into `target`.\n */\nfunction applyAttributesToTarget(source, target) {\n    var attName, attValue;\n    for (attName in source) {\n        if (module.exports.isLinkable(target, attName)) {\n            attValue = source[attName];\n            target[attName] = attValue;\n        }\n    }\n}\n\nfunction createNewProperty(propertyName, options) {\n    var that = this;\n\n    var prop = {\n        value: undefined,\n        event: new Event(),\n        filter: functionOrUndefined(options.filter),\n        converter: functionOrUndefined(options.converter),\n        delay: castPositiveInteger(options.delay),\n        action: null,\n        alwaysFired: options.alwaysFired ? true : false,\n        manager: this,\n        name: propertyName,\n        timeout: 0\n    };\n    prop.get = createGetter(prop, options);\n    prop.set = createSetter(prop, options, that, propertyName);\n\n    this._props[propertyName] = prop;\n    if (typeof options.init !== 'undefined') {\n        prop.set(options.init);\n    }\n\n    Object.defineProperty(this._container, propertyName, {\n        get: prop.get.bind(prop),\n        set: that.change.bind(that, propertyName),\n        enumerable: true,\n        configurable: false\n    });\n\n    return prop;\n}\n\nfunction createGetter(prop, options) {\n    if (typeof options.get === 'function') {\n        return function(v) {\n            var newValue = options.get(v);\n            addPropToValue(prop, newValue);\n            return newValue;\n        };\n    }\n    return function(v) {\n        return prop.value;\n    };\n}\n\nfunction createSetter(prop, options, that, propertyName) {\n    var setter;\n    if (typeof options.cast === 'function') {\n        if (typeof options.set === 'function') {\n            setter = function(v) {\n                removePropFromValue(prop, prop.get());\n                var castedValue = options.cast(v, that);\n                addPropToValue(prop, prop.value);\n                options.set(castedValue);\n            };\n        } else {\n            setter = function(v) {\n                removePropFromValue(prop, prop.get());\n                prop.value = options.cast(v, that);\n                addPropToValue(prop, prop.value);\n            };\n        }\n    } else {\n        setter = typeof options.set === 'function' ? options.set : function(v) {\n            removePropFromValue(prop, prop.get());\n            prop.value = v;\n            addPropToValue(prop, prop.value);\n        };\n    }\n    return setter;\n}\n\n/**\n * Add an `info` attribute to the  property's value. This is useful to\n * find the container and the property name from the value.\n */\nfunction addPropToValue(prop, value) {\n    if (value === undefined || value === null) return;\n    if (value.isContentChangeAware !== true) return;\n    var properties = value[PROPERTY_SYMBOL];\n    if (!Array.isArray(properties)) {\n        properties = [prop];\n    } else if (properties.indexOf(prop) === -1) {\n        properties.push(prop);\n    }\n    value[PROPERTY_SYMBOL] = properties;\n}\n\nfunction removePropFromValue(prop, value) {\n    if (value === undefined || value === null) return;\n    if (value.isContentChangeAware !== true) return;\n    var properties = value[PROPERTY_SYMBOL];\n    if (!Array.isArray(properties)) return;\n    var pos = properties.indexOf(prop);\n    if (pos === -1) return;\n    properties.splice(pos, 1);\n}\n\n/**\n * This is a special property which emit a change event as soon as any\n * value is set  to it, even if  this value has already  been set just\n * before. Moreover, the  value of this attribute is  always its name.\n * This is used for action properties in buttons, for instance.\n */\nPropertyManager.prototype.createAction = function(propertyName, options) {\n    if (typeof options === 'undefined') options = {};\n    options.alwaysFired = true;\n    return this.create(propertyName, options);\n};\n\n\n/**\n * Most  of  the  time,  `action` is  called  immediatly  without  any\n * argument. But  you can configure  your property with a  `delay`. If\n * you do so, the action is only called after this `delay`(in ms). The\n * `action`can be lost  if another call to `exec()`  occurs before the\n * end of the `delay` and the `delay` is reset.\n */\nfunction exec(prop, action) {\n    if (!prop.delay) action();\n    else {\n        clearTimeout(prop.timeout);\n        prop.timeout = setTimeout(action, prop.delay);\n    }\n};\n\n\nfunction fail(msg, source) {\n    if (typeof source === 'undefined') {\n        source = \"\";\n    } else {\n        source = \"::\" + source;\n    }\n    throw Error(\"[tfw.binding.property-manager\" + source + \"] \" + msg);\n}\n\nfunction castPositiveInteger(v) {\n    if (typeof v !== 'number') return 0;\n    if (isNaN(v)) return 0;\n    return Math.max(0, Math.floor(v));\n}\n\nfunction functionOrUndefined(f) {\n    if (typeof f === 'function') return f;\n    return undefined;\n}\n\n/**\n * A linkable property must link only if  we set a new value to it. If\n * the value  is a  List, we need  to check if  they have  a different\n * inner array because different Lists can share the same array and in\n * this cas, we don't want to fire a changed event.\n */\nfunction areDifferent(oldValue, newValue) {\n    return oldValue !== newValue;\n}\n\n\nmodule.exports._ = _;\n})"]}