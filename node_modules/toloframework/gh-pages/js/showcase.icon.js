/** @module showcase.icon */require( 'showcase.icon', function(require, module, exports) { var _=function(){var D={"en":{},"fr":{}},X=require("$").intl;function _(){return X(D,arguments);}_.all=D;return _}();
    // Code behind.
"use strict";


//===============================
// XJS:View autogenerated code.
try {
  module.exports = function() {
    //--------------------
    // Dependent modules.
    var $ = require('dom');
    var Tag = require('tfw.view').Tag;
    var Link = require('tfw.binding.link');
    var TfwViewIcon = require('tfw.view.icon');
    var TfwViewTextbox = require('tfw.view.textbox');
    //-------------------
    // Class definition.
    var ViewClass = function( args ) {
      try {
        if( typeof args === 'undefined' ) args = {};
        this.$elements = {};
        var that = this;
        //------------------
        // Create elements.
        var e_ = new Tag('SECTION');
        var e_0 = new Tag('ARTICLE', ["class"]);
        var e_00 = new TfwViewIcon();
        $.add( e_0, e_00 );
        var e_1 = new Tag('ARTICLE', ["class"]);
        var e_10 = new TfwViewIcon();
        $.add( e_1, e_10 );
        var e_2 = new Tag('ARTICLE', ["class"]);
        var e_20 = new TfwViewIcon();
        $.add( e_2, e_20 );
        var e_3 = new Tag('ARTICLE', ["class"]);
        var e_30 = new TfwViewIcon();
        $.add( e_3, e_30 );
        var e_text = new TfwViewTextbox({
          value: "home",
          label: "Icon's value",
          list: ["android","bug","camera","cancel","center","close","code","delete","direction","down","down-double","edit","eraser","export","flag-jp","flag-fr","flag-it","flag-en","font","fullscreen","gear","gps","hand","home","image","import","improvement","left","left-double","link","location","logout","mail","map-layer","menu","minus","minus-o","minus-small","ok","plus","plus-o","plus-small","print","question","redo","refresh","right","right-double","search","select","unselect","share","show","speaker","star","tri-down","tri-left","tri-right","tri-up","twitter","undo","up","up-double","user","wait","zoom-in","zoom-out"]
        });
        this.$elements.text = e_text;
        var e_size = new TfwViewTextbox({
          value: "32px",
          label: "Icon's size"
        });
        this.$elements.size = e_size;
        var e_pen0 = new TfwViewTextbox({
          value: "0",
          label: "Icon's pen 0"
        });
        this.$elements.pen0 = e_pen0;
        var e_pen1 = new TfwViewTextbox({
          value: "1",
          label: "Icon's pen 1"
        });
        this.$elements.pen1 = e_pen1;
        $.add( e_, e_0, e_1, e_2, e_3, e_text, e_size, e_pen0, e_pen1 );
        //-----------------------
        // Declare root element.
        Object.defineProperty( this, '$', {value: e_.$, writable: false, enumerable: false, configurable: false } );
        //-------
        // Links
        new Link({
          A:{obj: that.$elements.text, name: 'value'},
          B:{obj: e_00, name: 'content', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.size, name: 'value'},
          B:{obj: e_00, name: 'size', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.text, name: 'value'},
          B:{obj: e_10, name: 'content', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.size, name: 'value'},
          B:{obj: e_10, name: 'size', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.text, name: 'value'},
          B:{obj: e_20, name: 'content', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.size, name: 'value'},
          B:{obj: e_20, name: 'size', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.text, name: 'value'},
          B:{obj: e_30, name: 'content', delay: 333}
        });
        new Link({
          A:{obj: that.$elements.size, name: 'value'},
          B:{obj: e_30, name: 'size', delay: 333}
        });
        //----------------------
        // Initialize elements.
        e_.$.style.margin = "0"
        e_.$.style.padding = "0"
        e_0.class = "thm-bg0";
        e_0.$.style.display = "inline-block"
        e_0.$.style.margin = "2px"
        e_0.$.style.padding = "4px"
        e_0.$.style.border = "1px solid rgba(0,0,0,.5)"
        e_1.class = "thm-bg1";
        e_1.$.style.display = "inline-block"
        e_1.$.style.margin = "2px"
        e_1.$.style.padding = "4px"
        e_1.$.style.border = "1px solid rgba(0,0,0,.5)"
        e_2.class = "thm-bg2";
        e_2.$.style.display = "inline-block"
        e_2.$.style.margin = "2px"
        e_2.$.style.padding = "4px"
        e_2.$.style.border = "1px solid rgba(0,0,0,.5)"
        e_3.class = "thm-bg3";
        e_3.$.style.display = "inline-block"
        e_3.$.style.margin = "2px"
        e_3.$.style.padding = "4px"
        e_3.$.style.border = "1px solid rgba(0,0,0,.5)"
        $.addClass(this, 'view', 'custom');
      }
      catch( ex ) {
        console.error('mod/showcase.icon.js', ex);
        throw Error('Instantiation error in XJS of "mod/showcase.icon.js":\n' + ex)
      }
    };
    return ViewClass;
  }();
}
catch( ex ) {
  throw Error('Definition error in XJS of "mod/showcase.icon.js"\n' + ex)
}


  
module.exports._ = _;
/**
 * @module showcase.icon
 * @see module:$
 * @see module:dom
 * @see module:tfw.view
 * @see module:tfw.binding.link
 * @see module:tfw.view.icon
 * @see module:tfw.view.textbox

 */
});