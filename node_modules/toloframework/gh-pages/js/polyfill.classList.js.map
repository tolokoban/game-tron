{"version":3,"file":"polyfill.classList.js","sources":["polyfill.classList.js"],"sourcesContent":["/** @module polyfill.classList */require( 'polyfill.classList', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20150312\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif (\"document\" in self) {\n\n    // Full polyfill for browsers with no classList support\n    // Including IE < Edge missing SVGElement.classList\n    if (!(\"classList\" in document.createElement(\"_\"))\n        || document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n        (function (view) {\n\n            \"use strict\";\n\n            if (!('Element' in view)) return;\n\n            var\n            classListProp = \"classList\"\n            , protoProp = \"prototype\"\n            , elemCtrProto = view.Element[protoProp]\n            , objCtr = Object\n            , strTrim = String[protoProp].trim || function () {\n                return this.replace(/^\\s+|\\s+$/g, \"\");\n            }\n            , arrIndexOf = Array[protoProp].indexOf || function (item) {\n                var\n                i = 0\n                , len = this.length\n                ;\n                for (; i < len; i++) {\n                    if (i in this && this[i] === item) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            // Vendors: please allow content code to instantiate DOMExceptions\n            , DOMEx = function (type, message) {\n                this.name = type;\n                this.code = DOMException[type];\n                this.message = message;\n            }\n            , checkTokenAndGetIndex = function (classList, token) {\n                if (token === \"\") {\n                    throw new DOMEx(\n                        \"SYNTAX_ERR\"\n                        , \"An invalid or illegal string was specified\"\n                    );\n                }\n                if (/\\s/.test(token)) {\n                    throw new DOMEx(\n                        \"INVALID_CHARACTER_ERR\"\n                        , \"String contains an invalid character\"\n                    );\n                }\n                return arrIndexOf.call(classList, token);\n            }\n            , ClassList = function (elem) {\n                var\n                trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n                , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n                , i = 0\n                , len = classes.length\n                ;\n                for (; i < len; i++) {\n                    this.push(classes[i]);\n                }\n                this._updateClassName = function () {\n                    elem.setAttribute(\"class\", this.toString());\n                };\n            }\n            , classListProto = ClassList[protoProp] = []\n            , classListGetter = function () {\n                return new ClassList(this);\n            }\n            ;\n            // Most DOMException implementations don't allow calling DOMException's toString()\n            // on non-DOMExceptions. Error's toString() is sufficient here.\n            DOMEx[protoProp] = Error[protoProp];\n            classListProto.item = function (i) {\n                return this[i] || null;\n            };\n            classListProto.contains = function (token) {\n                token += \"\";\n                return checkTokenAndGetIndex(this, token) !== -1;\n            };\n            classListProto.add = function () {\n                var\n                tokens = arguments\n                , i = 0\n                , l = tokens.length\n                , token\n                , updated = false\n                ;\n                do {\n                    token = tokens[i] + \"\";\n                    if (checkTokenAndGetIndex(this, token) === -1) {\n                        this.push(token);\n                        updated = true;\n                    }\n                }\n                while (++i < l);\n\n                if (updated) {\n                    this._updateClassName();\n                }\n            };\n            classListProto.remove = function () {\n                var\n                tokens = arguments\n                , i = 0\n                , l = tokens.length\n                , token\n                , updated = false\n                , index\n                ;\n                do {\n                    token = tokens[i] + \"\";\n                    index = checkTokenAndGetIndex(this, token);\n                    while (index !== -1) {\n                        this.splice(index, 1);\n                        updated = true;\n                        index = checkTokenAndGetIndex(this, token);\n                    }\n                }\n                while (++i < l);\n\n                if (updated) {\n                    this._updateClassName();\n                }\n            };\n            classListProto.toggle = function (token, force) {\n                token += \"\";\n\n                var\n                result = this.contains(token)\n                , method = result ?\n                    force !== true && \"remove\"\n                    :\n                    force !== false && \"add\"\n                ;\n\n                if (method) {\n                    this[method](token);\n                }\n\n                if (force === true || force === false) {\n                    return force;\n                } else {\n                    return !result;\n                }\n            };\n            classListProto.toString = function () {\n                return this.join(\" \");\n            };\n\n            if (objCtr.defineProperty) {\n                var classListPropDesc = {\n                    get: classListGetter\n                    , enumerable: true\n                    , configurable: true\n                };\n                try {\n                    objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n                } catch (ex) { // IE 8 doesn't support enumerable:true\n                    if (ex.number === -0x7FF5EC54) {\n                        classListPropDesc.enumerable = false;\n                        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n                    }\n                }\n            } else if (objCtr[protoProp].__defineGetter__) {\n                elemCtrProto.__defineGetter__(classListProp, classListGetter);\n            }\n\n        }(self));\n\n    } else {\n        // There is full or partial native classList support, so just check if we need\n        // to normalize the add/remove and toggle APIs.\n\n        (function () {\n            \"use strict\";\n\n            var testElement = document.createElement(\"_\");\n\n            testElement.classList.add(\"c1\", \"c2\");\n\n            // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n            // classList.remove exist but support only one argument at a time.\n            if (!testElement.classList.contains(\"c2\")) {\n                var createMethod = function(method) {\n                    var original = DOMTokenList.prototype[method];\n\n                    DOMTokenList.prototype[method] = function(token) {\n                        var i, len = arguments.length;\n\n                        for (i = 0; i < len; i++) {\n                            token = arguments[i];\n                            original.call(this, token);\n                        }\n                    };\n                };\n                createMethod('add');\n                createMethod('remove');\n            }\n\n            testElement.classList.toggle(\"c3\", false);\n\n            // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n            // support the second argument.\n            if (testElement.classList.contains(\"c3\")) {\n                var _toggle = DOMTokenList.prototype.toggle;\n\n                DOMTokenList.prototype.toggle = function(token, force) {\n                    if (1 in arguments && !this.contains(token) === !force) {\n                        return force;\n                    } else {\n                        return _toggle.call(this, token);\n                    }\n                };\n            }\n            testElement = null;\n        }());\n    }\n}\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","_","X","D","arguments","en","intl","all","self","document","createElement","createElementNS","testElement","classList","add","contains","createMethod","method","original","DOMTokenList","prototype","token","i","len","length","call","this","toggle","_toggle","force","view","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","replace","arrIndexOf","Array","indexOf","item","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","test","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","tokens","l","updated","remove","index","splice","result","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","number","__defineGetter__"],"mappings":"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"}