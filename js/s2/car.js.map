{"version":3,"sources":["car.js"],"names":["require","module","exports","_","Polyline","readonly","MINUS_ONE","DIRECTIONS","RIGHT","LEFT","DEFAULT_X","DEFAULT_Y","Car","action","x","y","dir","walls","minSpeed","speed","maxSpeed","break","lastTime","polyline","time","delta","Math","max","actionRight","add","length","actionLeft","actionAccel","dirV","vx","vy","move"],"mappings":"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","sourcesContent":["/** @module s2/car */require( 's2/car', function(require, module, exports) { var _=function(){return ''};   \"use strict\";\r\n\r\nconst Polyline = require(\"s2/polyline\"),\r\n      { readonly } = require(\"common\");\r\n\r\nconst MINUS_ONE = -1;\r\nconst DIRECTIONS = [ [0, MINUS_ONE], [1, 0], [0, 1], [MINUS_ONE, 0] ];\r\nconst RIGHT = 1;\r\nconst LEFT = 3;\r\nconst DEFAULT_X = 0;\r\nconst DEFAULT_Y = 256;\r\n\r\nclass Car {\r\n    constructor( action, x = DEFAULT_X, y = DEFAULT_Y, dir = RIGHT ) {\r\n        this.action = action;\r\n        this.walls = [x, y, x, y];\r\n        this.minSpeed = 0.050;\r\n        this.speed = this.minSpeed;\r\n        this.maxSpeed = 0.250;\r\n        this.break = 0.0005;\r\n        this.lastTime = 0;\r\n        this.dir = dir;\r\n\r\n        readonly( this, {\r\n            polyline: new Polyline( x, y )\r\n        });\r\n    }\r\n\r\n    move( time ) {\r\n        if( this.lastTime === 0 ) {\r\n            this.lastTime = time;\r\n            return;\r\n        }\r\n\r\n        const delta = time - this.lastTime;\r\n        this.lastTime = time;\r\n\r\n        // -------------\r\n        // Décelération.\r\n        if( this.speed > this.minSpeed ) {\r\n            this.speed = Math.max( this.minSpeed, this.speed - this.break * delta );\r\n        }\r\n\r\n        // --------------------\r\n        // Gestion des touches.\r\n        const action = this.action;\r\n        if( action.actionRight ) {\r\n            this.polyline.add();\r\n            this.dir = (this.dir + RIGHT) % DIRECTIONS.length;\r\n        } else if( action.actionLeft ) {\r\n            this.polyline.add();\r\n            this.dir = (this.dir + LEFT) % DIRECTIONS.length;\r\n        }\r\n        if( action.actionAccel ) {\r\n            this.speed = this.maxSpeed;\r\n        }\r\n\r\n        // ---------------------------------------\r\n        // Déplacement dans la direction courante.\r\n        const dirV = DIRECTIONS[this.dir],\r\n              vx = this.speed * delta * dirV[0],\r\n              vy = this.speed * delta * dirV[1];\r\n        this.polyline.move( vx, vy );\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Car;\r\n\r\n\r\n\r\nmodule.exports._ = _;\n})"]}