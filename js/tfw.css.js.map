{"version":3,"sources":["tfw.css.js"],"names":["require","module","exports","_","D","X","intl","arguments","all","RX_NUMBER","parseUnit","txt","c","mode","i","length","charAt","unit","v","parseFloat","substr","u","trim","toLowerCase"],"mappings":";;AAAA;AAAsBA,OAAO,CAAE,SAAF,EAAa,UAASA,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAAE,MAAIC,CAAC,GAAC,YAAU;AAAC,QAAIC,CAAC,GAAC;AAAC,YAAK;AAAN,KAAN;AAAA,QAAgBC,CAAC,GAACL,OAAO,CAAC,GAAD,CAAP,CAAaM,IAA/B;;AAAoC,aAASH,CAAT,GAAY;AAAC,aAAOE,CAAC,CAACD,CAAD,EAAGG,SAAH,CAAR;AAAuB;;AAAAJ,IAAAA,CAAC,CAACK,GAAF,GAAMJ,CAAN;AAAQ,WAAOD,CAAP;AAAS,GAApG,EAAN;;AAE/E,MAAIM,SAAS,GAAG,8CAAhB;;AAEAP,EAAAA,OAAO,CAACQ,SAAR,GAAoB,UAASC,GAAT,EAAc;AAC9B,QAAIC,CAAJ;AACA,QAAIC,IAAI,GAAG,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCF,MAAAA,CAAC,GAAGD,GAAG,CAACK,MAAJ,CAAWF,CAAX,CAAJ;;AACA,UAAID,IAAI,KAAK,CAAb,EAAgB;AACZ,YAAID,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAjB,IAAyBA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAA9C,EAAoDC,IAAI,GAAG,CAAP,CAApD,KACK,IAAID,CAAC,IAAI,GAAT,EAAcC,IAAI,GAAG,CAAP,CAAd,KACA,IAAID,CAAC,GAAG,GAAR,EAAa;AACrB,OAJD,MAKK,IAAIC,IAAI,IAAI,CAAZ,EAAe;AAChB,YAAID,CAAC,IAAI,GAAT,EAAcC,IAAI,GAAG,CAAP,CAAd,KACK,IAAID,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,GAAnB,EAAwB;AAChC,OAHI,MAIA,IAAIC,IAAI,IAAI,CAAZ,EAAe;AAChB,YAAID,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,GAAnB,EAAwB;AAC3B;AACJ;;AAED,QAAIK,IAAI,GAAG;AACPC,MAAAA,CAAC,EAAEC,UAAU,CAACR,GAAG,CAACS,MAAJ,CAAW,CAAX,EAAcN,CAAd,CAAD,CADN;AAEPO,MAAAA,CAAC,EAAEV,GAAG,CAACS,MAAJ,CAAWN,CAAX,EAAcQ,IAAd,GAAqBC,WAArB;AAFI,KAAX;;AAKA,QAAKN,IAAI,CAACI,CAAL,KAAW,EAAhB,EAAqB;AACnBJ,MAAAA,IAAI,CAACI,CAAL,GAAS,IAAT;AACD;;AACD,WAAOJ,IAAP;AACH,GA5BD;;AAgCAhB,EAAAA,MAAM,CAACC,OAAP,CAAeC,CAAf,GAAmBA,CAAnB;AACC,CArC4B,CAAP","sourcesContent":["/** @module tfw.css */require( 'tfw.css', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n   \nvar RX_NUMBER = /[ \\t\\n\\r]*[+-]?(\\.[0-9]+|[0-9]+(\\.[0-9]+)?)/g;\n\nexports.parseUnit = function(txt) {\n    var c;\n    var mode = 0;\n    for (var i = 0; i < txt.length; i++) {\n        c = txt.charAt(i);\n        if (mode === 0) {\n            if (c == '-' || c == '+' || (c >= '0' && c <= '9')) mode = 1;\n            else if (c == '.') mode = 2;\n            else if (c > ' ') break;\n        }\n        else if (mode == 1) {\n            if (c == '.') mode = 2;\n            else if (c < '0' || c > '9') break;\n        }\n        else if (mode == 2) {\n            if (c < '0' || c > '9') break;\n        }\n    }\n\n    var unit = {\n        v: parseFloat(txt.substr(0, i)),\n        u: txt.substr(i).trim().toLowerCase()\n    };\n    \n    if ( unit.u === '' ) {\n      unit.u = 'px';\n    }\n    return unit;\n};\n\n\n\nmodule.exports._ = _;\n})"]}