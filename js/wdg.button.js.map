{"version":3,"sources":["wdg.button.js"],"names":["require","module","exports","_","D","X","intl","arguments","all","Button","extend","def","ext","out","JSON","parse","stringify","key","val","genericButton","base","opts","Cancel","text","icon","flat","Close","GotIt","Delete","type","No","Ok","Edit","Save","Yes","default"],"mappings":";;AAAA;AAAyBA,OAAO,CAAE,YAAF,EAAgB,UAASA,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAAE,MAAIC,CAAC,GAAC,YAAU;AAAC,QAAIC,CAAC,GAAC;AAAC,YAAK;AAAC,kBAAS,QAAV;AAAmB,iBAAQ,OAA3B;AAAmC,kBAAS,QAA5C;AAAqD,gBAAO,MAA5D;AAAmE,iBAAQ,QAA3E;AAAoF,cAAK,IAAzF;AAA8F,cAAK,IAAnG;AAAwG,gBAAO,MAA/G;AAAsH,eAAM;AAA5H,OAAN;AAAyI,YAAK;AAAC,kBAAS,SAAV;AAAoB,iBAAQ,QAA5B;AAAqC,kBAAS,WAA9C;AAA0D,gBAAO,QAAjE;AAA0E,iBAAQ,cAAlF;AAAiG,cAAK,KAAtG;AAA4G,cAAK,SAAjH;AAA2H,gBAAO,QAAlI;AAA2I,eAAM;AAAjJ;AAA9I,KAAN;AAAA,QAA6SC,CAAC,GAACL,OAAO,CAAC,GAAD,CAAP,CAAaM,IAA5T;;AAAiU,aAASH,CAAT,GAAY;AAAC,aAAOE,CAAC,CAACD,CAAD,EAAGG,SAAH,CAAR;AAAuB;;AAAAJ,IAAAA,CAAC,CAACK,GAAF,GAAMJ,CAAN;AAAQ,WAAOD,CAAP;AAAS,GAAjY,EAAN;;AAClF;;AAEH,MAAIM,MAAM,GAAGT,OAAO,CAAC,iBAAD,CAApB;AAEA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;;;;;;AAKA;;;;;;;AAMA;;;;AAGA;;;;;;;;;;;;;;;;AAgBA,WAASU,MAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA4B;AAC1B,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,SAAL,CAAgBL,GAAhB,CAAZ,CAAV;AACA,QAAI,OAAOC,GAAP,KAAe,WAAnB,EAAiC,OAAOC,GAAP;AAEjC,QAAII,GAAJ,EAASC,GAAT;;AACA,SAAKD,GAAL,IAAYL,GAAZ,EAAkB;AAChBC,MAAAA,GAAG,CAACI,GAAD,CAAH,GAAWC,GAAX;AACD;;AACD,WAAOL,GAAP;AACD;;AAAA;;AAGD,WAASM,aAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAqC;AACnC,QAAI,OAAOD,IAAP,KAAgB,WAApB,EAAkCA,IAAI,GAAG,EAAP;AAClC,WAAO,IAAIX,MAAJ,CAAYC,MAAM,CAAEU,IAAF,EAAQC,IAAR,CAAlB,CAAP;AACD;;AAEDZ,EAAAA,MAAM,CAACa,MAAP,GAAgB,UAAWD,IAAX,EAAkB;AAChC,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,QAAD,CAAT;AAAqBqB,MAAAA,IAAI,EAAE,QAA3B;AAAqCC,MAAAA,IAAI,EAAE;AAA3C,KAAD,EAAoDJ,IAApD,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACiB,KAAP,GAAe,UAAWL,IAAX,EAAkB;AAC/B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,OAAD,CAAT;AAAoBqB,MAAAA,IAAI,EAAE,OAA1B;AAAmCC,MAAAA,IAAI,EAAE;AAAzC,KAAD,EAAkDJ,IAAlD,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACkB,KAAP,GAAe,UAAWN,IAAX,EAAkB;AAC/B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,OAAD,CAAT;AAAoBsB,MAAAA,IAAI,EAAE;AAA1B,KAAD,EAAmCJ,IAAnC,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACmB,MAAP,GAAgB,UAAWP,IAAX,EAAkB;AAChC,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,QAAD,CAAT;AAAqB0B,MAAAA,IAAI,EAAE,WAA3B;AAAwCL,MAAAA,IAAI,EAAE;AAA9C,KAAD,EAA2DH,IAA3D,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACqB,EAAP,GAAY,UAAWT,IAAX,EAAkB;AAC5B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,IAAD,CAAT;AAAiBqB,MAAAA,IAAI,EAAE,QAAvB;AAAiCC,MAAAA,IAAI,EAAE;AAAvC,KAAD,EAAgDJ,IAAhD,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACsB,EAAP,GAAY,UAAWV,IAAX,EAAkB;AAC5B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,IAAD,CAAT;AAAiBqB,MAAAA,IAAI,EAAE,IAAvB;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAAD,EAA4CJ,IAA5C,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACuB,IAAP,GAAc,UAAWX,IAAX,EAAkB;AAC9B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,MAAD,CAAT;AAAmB0B,MAAAA,IAAI,EAAE,SAAzB;AAAoCL,MAAAA,IAAI,EAAE;AAA1C,KAAD,EAAqDH,IAArD,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACwB,IAAP,GAAc,UAAWZ,IAAX,EAAkB;AAC9B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,MAAD,CAAT;AAAmB0B,MAAAA,IAAI,EAAE,SAAzB;AAAoCL,MAAAA,IAAI,EAAE;AAA1C,KAAD,EAAqDH,IAArD,CAApB;AACD,GAFD;;AAGAZ,EAAAA,MAAM,CAACyB,GAAP,GAAa,UAAWb,IAAX,EAAkB;AAC7B,WAAOF,aAAa,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,CAAC,CAAC,KAAD,CAAT;AAAkBsB,MAAAA,IAAI,EAAE;AAAxB,KAAD,EAAiCJ,IAAjC,CAApB;AACD,GAFD;;AAIAZ,EAAAA,MAAM,CAAC0B,OAAP,GAAiB;AACfZ,IAAAA,IAAI,EAAE,IADS;AAEfC,IAAAA,IAAI,EAAE,IAFS;AAGfK,IAAAA,IAAI,EAAE;AAHS,GAAjB;AAMA5B,EAAAA,MAAM,CAACC,OAAP,GAAiBO,MAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEAR,EAAAA,MAAM,CAACC,OAAP,CAAeC,CAAf,GAAmBA,CAAnB;AACC,CA5P+B,CAAP","sourcesContent":["/** @module wdg.button */require( 'wdg.button', function(require, module, exports) { var _=function(){var D={\"en\":{\"cancel\":\"Cancel\",\"close\":\"Close\",\"delete\":\"Delete\",\"edit\":\"Edit\",\"gotit\":\"Got it\",\"no\":\"No\",\"ok\":\"OK\",\"save\":\"Save\",\"yes\":\"Yes\"},\"fr\":{\"cancel\":\"Annuler\",\"close\":\"Fermer\",\"delete\":\"Supprimer\",\"edit\":\"Editer\",\"gotit\":\"J'ai compris\",\"no\":\"Non\",\"ok\":\"Valider\",\"save\":\"Sauver\",\"yes\":\"Oui\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n   \"use strict\";\n\nvar Button = require(\"tfw.view.button\");\n\n/*\nrequire(\"font.roboto\");\nvar $ = require( \"dom\" );\nvar DB = require( \"tfw.data-binding\" );\nvar Icon = require( \"wdg.icon\" );\nvar Touchable = require( \"tfw.touchable\" );\n\nvar TYPES = [ 'undef', 'default', 'standard', 'primary', 'secondary' ];\n*/\n\n/**\n * Liste des classes CSS applicables sur un bouton :\n * * __standard__ : Bouton par défaut. Il est blanc.\n * * __primary__ : Bouton bleu.\n * * __warning__ : Bouton orangé pour indiquer une action potentiellement dangereuse.\n *\n * @param {string} opts.text - Texte à afficher dans le bouton.\n * @param {boolean} opts.enabled - Mettre `false` pour désactiver le bouton.\n * @param {string} opts.href - Si défini, lien vers lequel dirigier la page en cas de click.\n * @param {object} opts.email - Associe le _Tap_ à l'envoi d'un mail.\n * @param {string} opts.email.to - destinataire.\n * @param {string} opts.email.subject - sujet du mail.\n * @param {string} opts.email.body - corps du mail.\n *\n * @example\n * var Button = require(\"tp4.button\");\n * var instance = new Button();\n * @class Button\n */\n/*\nvar Button = function ( opts ) {\n  var that = this;\n\n  var icon = new Icon({ size: \"24px\" });\n  var text = $.div( 'text' );\n  var elem = $.elem( this, 'button', 'wdg-button', [icon, text] );\n\n  var refresh = setStyle.bind( this, {\n    icon: icon, text: text\n  });\n\n  DB.prop( this, 'value' );\n  DB.propEnum( TYPES )( this, 'type' );\n  DB.prop( this, 'icon' )( function ( v ) {\n    touchable.enabled = v;\n    refresh();\n  } );\n  DB.propBoolean( this, 'responsive' );\n  DB.propBoolean( this, 'anim' );\n  DB.propBoolean( this, 'wait' );\n  DB.propString( this, 'text' );\n  var touchable = new Touchable( elem, {\n    classToAdd: 'thm-ele8'\n  } );\n  DB.propBoolean( this, 'enabled' )( function ( v ) {\n    touchable.enabled = v;\n    refresh();\n  } );\n  DB.propBoolean( this, 'inverted' );\n  DB.propBoolean( this, 'flat' );\n  DB.prop( this, 'action', 0 );\n  DB.propBoolean( this, 'wide' );\n  DB.propBoolean( this, 'visible' );\n\n  opts = DB.extend( {\n    inverted: false,\n    type: \"undef\",\n    text: \"\",\n    href: null,\n    target: null,\n    value: \"action\",\n    action: 0,\n    responsive: false,\n    anim: false,\n    flat: false,\n    small: false,\n    enabled: true,\n    wait: false,\n    icon: null,\n    wide: false,\n    visible: true\n  }, opts, this, refresh );\n\n  // Animate the pressing.\n  $.on( this.element, {\n    keydown: function ( evt ) {\n      if ( evt.keyCode == 13 || evt.keyCode == 32 ) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        that.fire();\n      }\n    }\n  } );\n  touchable.tap.add( that.fire.bind( that ) );\n};\n*/\n/**\n * @class Button\n * @function on\n * @param {function} slot - Function to call when `action` has changed.\n */\n/*\nButton.prototype.on = function ( slot ) {\n  DB.bind( this, 'action', slot );\n  return this;\n};\n*/\n/**\n * Simulate a click on the button if it is enabled.\n */\n/*\nButton.prototype.fire = function () {\n  if ( this.enabled ) {\n    var href = this.href;\n    if ( typeof href !== 'string' || href.trim().length === 0 ) {\n      DB.fire( this, 'action', this.value );\n    } else if ( typeof this.target === 'string' && this.target.trim().length > 0 ) {\n      window.open( href, this.target );\n    } else {\n      window.location = href;\n    }\n  }\n};\n*/\n\n\nfunction extend( def, ext ) {\n  var out = JSON.parse( JSON.stringify( def ) );\n  if( typeof ext === 'undefined' ) return out;\n\n  var key, val;\n  for( key in ext ) {\n    out[key] = val;\n  }\n  return out;\n};\n\n\nfunction genericButton( base, opts ) {\n  if( typeof base === 'undefined' ) base = {};\n  return new Button( extend( base, opts ) );\n}\n\nButton.Cancel = function ( opts ) {\n  return genericButton({ text: _('cancel'), icon: 'cancel', flat: true }, opts);\n};\nButton.Close = function ( opts ) {\n  return genericButton({ text: _('close'), icon: 'close', flat: true }, opts);\n};\nButton.GotIt = function ( opts ) {\n  return genericButton({ text: _('gotit'), flat: true }, opts);\n};\nButton.Delete = function ( opts ) {\n  return genericButton({ text: _('delete'), type: 'secondary', icon: 'delete' }, opts);\n};\nButton.No = function ( opts ) {\n  return genericButton({ text: _('no'), icon: \"cancel\", flat: true }, opts);\n};\nButton.Ok = function ( opts ) {\n  return genericButton({ text: _('ok'), icon: \"ok\", flat: true }, opts);\n};\nButton.Edit = function ( opts ) {\n  return genericButton({ text: _('edit'), type: 'primary', icon: 'edit' }, opts);\n};\nButton.Save = function ( opts ) {\n  return genericButton({ text: _('save'), type: 'primary', icon: 'save' }, opts);\n};\nButton.Yes = function ( opts ) {\n  return genericButton({ text: _('yes'), flat: true }, opts);\n};\n\nButton.default = {\n  text: \"OK\",\n  icon: null,\n  type: null\n};\n\nmodule.exports = Button;\n\n/*\nfunction setStyle( children ) {\n  this.element.className = 'wdg-button';\n\n  if( !this.visible ) {\n    $.addClass( this, 'hide' );\n  }\n  if( this.flat ) {\n    $.addClass( this, 'flat' );\n    \n    switch( this.type ) {\n    case 'primary':\n    case 'undef':\n      $.addClass( this, 'thm-fgP' );\n      break;\n    case 'secondary':\n      $.addClass( this, 'thm-fgS' );\n      break;\n    }\n  } else {\n    $.addClass( this, 'thm-ele2' );\n\n    switch( this.type ) {\n    case 'primary':\n      $.addClass( this, 'thm-bgP' );\n      break;\n    case 'secondary':\n      $.addClass( this, 'thm-bgS' );\n      break;\n    default:\n      $.addClass( this, 'thm-bg3' );\n    }\n  }\n\n  var txt = (this.text || \"\").trim();\n  if( txt.length > 0 ) {\n    children.text.textContent = this.text;\n    $.removeClass( this, \"no-text\" );\n  } else {\n    $.addClass( this, \"no-text\" );\n  }\n\n  if ( this.wait ) {\n    children.icon.visible = true;\n    children.icon.content = \"wait\";\n    children.icon.rotate = true;\n  }\n  else if ( !this.icon || ( typeof this.icon === 'string' && this.icon.trim().length === 0 ) ) {\n    children.icon.visible = false;\n    $.removeClass( this, 'responsive' );\n  } else {\n    children.icon.visible = true;\n    children.icon.content = this.icon;\n    children.icon.rotate = this.anim;\n    if( this.responsive ) {\n      $.addClass( this, 'responsive' );\n    }\n  }\n\n  if( !this.enabled || this.wait ) $.addClass( this, 'disabled' );\n  if( this.wide ) $.addClass( this, 'wide' );\n  if( !this.inverted ) $.addClass( this, 'iconToLeft' );\n}\n*/\n\n\n\nmodule.exports._ = _;\n})"]}