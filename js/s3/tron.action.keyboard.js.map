{"version":3,"sources":["tron.action.keyboard.js"],"names":["require","module","exports","_","create","RightKey","LeftKey","AccelKey","readonly","Context","isLoaded","rightPressed","leftPressed","accelPressed","Keyboard","actionRight","isPressed","actionLeft","actionAccel","ensureKeysListenerIsAttached","args","document","addEventListener","evt","repeat","key","preventDefault"],"mappings":"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","sourcesContent":["/** @module s3/tron.action.keyboard */require( 's3/tron.action.keyboard', function(require, module, exports) { var _=function(){return ''};   \"use strict\";\r\n\r\nmodule.exports = {\r\n    create,\r\n    RightKey: \"ArrowRight\",\r\n    LeftKey: \"ArrowLeft\",\r\n    AccelKey: \" \"\r\n};\r\n\r\n\r\nconst { readonly } = require( \"common\" );\r\n\r\nconst Context = {\r\n    isLoaded: false,\r\n    rightPressed: false,\r\n    leftPressed: false,\r\n    accelPressed: false\r\n};\r\n\r\nclass Keyboard {\r\n    constructor() {\r\n        readonly( this, {\r\n            actionRight() {\r\n                const isPressed = Context.rightPressed;\r\n                // Quand une touche a été enfoncée, on la considère virtuellement\r\n                // enfoncée tant qu'on n'a pas lu son état. Ensuite, même si elle\r\n                // est physiquement toujours enfoncée, on la considère relâchées.\r\n                Context.rightPressed = false;\r\n                return isPressed;\r\n            },\r\n            actionLeft() {\r\n                const isPressed = Context.leftPressed;\r\n                Context.leftPressed = false;\r\n                return isPressed;\r\n            },\r\n            actionAccel() {\r\n                const isPressed = Context.accelPressed;\r\n                Context.accelPressed = false;\r\n                return isPressed;\r\n            }\r\n        } );\r\n        ensureKeysListenerIsAttached();\r\n    }\r\n\r\n    /**\r\n     * Cette méthode est appellée  sur toutes les actions à chaque frame, mais  pour cette action il\r\n     * n'y a rien à faire.\r\n     */\r\n    process() {\r\n        /* eslint class-methods-use-this: 0 */\r\n        // Il n'y a rien à faire de particulier à chaque frame.\r\n    }\r\n}\r\n\r\n/**\r\n * @param {any} args - Arguments spécifiques aux actions à observer.\r\n * @return {Keyboard} Un objet gérant les actions provenant du clavier.\r\n */\r\nfunction create( args ) {\r\n    return new Keyboard( args );\r\n}\r\n\r\n/**\r\n * Si besoin, ajouter un Listener pour les touches du clavier.\r\n * @return {undefined}\r\n */\r\nfunction ensureKeysListenerIsAttached() {\r\n    if ( Context.isLoaded ) return;\r\n    Context.isLoaded = true;\r\n\r\n    document.addEventListener( \"keydown\", evt => {\r\n        // Quand on garde une touche enfoncée, on peut activer le mode répétition\r\n        // qui envoie plusieurs événements \"keydown\" consécutifs pour la même touche.\r\n        // Si on ne tient pas compte de cela, on risque de tourner plusieurs fois à\r\n        // angle droit simplement parce qu'on n'a pas relâché la touche.\r\n        if ( evt.repeat ) return;\r\n\r\n        switch ( evt.key ) {\r\n        case module.exports.RightKey:\r\n            Context.rightPressed = true;\r\n            evt.preventDefault();\r\n            break;\r\n        case module.exports.LeftKey:\r\n            Context.leftPressed = true;\r\n            evt.preventDefault();\r\n            break;\r\n        case module.exports.AccelKey:\r\n            Context.accelPressed = true;\r\n            evt.preventDefault();\r\n            break;\r\n        default:\r\n            // Rien à faire pour les autres touches.\r\n        }\r\n    }, true );\r\n    document.addEventListener( \"keyup\", evt => {\r\n        switch ( evt.key ) {\r\n        case Context.RightKey:\r\n        case Context.LeftKey:\r\n        case Context.AccelKey:\r\n            evt.preventDefault();\r\n            break;\r\n        default:\r\n            // Rien à faire pour les autres touches.\r\n        }\r\n    }, true );\r\n}\r\n\r\n\r\n\r\nmodule.exports._ = _;\n})"]}